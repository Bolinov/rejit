rejit regular expression (JIT) compiler by Alexandre Rames <alexandre@uop.re>.


NB:
- All scripts and utilities should include an help message available via
  $ <script> --help
- Rejit is still a prototype / proof of concept.
  It is not ready for production, the benchmarks and require some improvements,
  etc.


Bulding and usage --------------------------------------------------------------

You can build the rejit library with
  $ scons

Include <rejit>/include/rejit.h in your program.  Some documentation is
available as comments in the header file.

Once the library is built you can link it with your executable.
  $ g++ -o myprg myprg.cc -I<rejit>/include -L<rejit>/build/release -lrejit


A basic example sample/basic.cc is included. It is automatically compiled when
running scons if you want to play with it.
You can manually compile it with:
  $ scons
  $ g++ -o basic sample/basic.cc -Iinclude -L/build/release -lrejit


Testing ------------------------------------------------------------------------

Run rejit test suite with
  $ ./tools/tests/run.py


Benchmarking -------------------------------------------------------------------

Run the set of benchmarks with
  $ ./tools/benchmarks/run.py
. The results along with some description of rejit will be available as an html
file html/rejit.html.


If you want to look at regexp performances, you can use rejit's benchmark
utilities.
You can build them with
  $ scons benchmark

This will produce the executables
  tools/benchmarks/resources/engines/rejit/engine
  tools/benchmarks/resources/engines/re2/engine
which you can use for example with
  $ tools/benchmarks/resources/engines/rejit/engine 'regexp'
.
Speed is reported in bytes per second.

See
  $ tools/benchmarks/resources/engines/rejit/engine --help
for details.
